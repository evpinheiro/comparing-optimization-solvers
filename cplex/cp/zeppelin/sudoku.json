{"info": {}, "config": {"looknfeel": "default", "personalizedMode": "false"}, "name": "cp/jupyter/sudoku", "paragraphs": [{"settings": {"forms": {}, "params": {}}, "text": "%md\n# Sudoku\n\nThis tutorial includes everything you need to set up decision optimization engines, build constraint programming models.\n\n\nWhen you finish this tutorial, you'll have a foundational knowledge of _Prescriptive Analytics_.\n\n>This notebook is part of the **[Prescriptive Analytics for Python](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)**\n\n>It requires a valid subscription to **Decision Optimization on the Cloud** or a **local installation of CPLEX Optimizers**. \nDiscover us [here](https://developer.ibm.com/docloud)\n\n\nTable of contents:\n\n-  Describe the business problem\n*  How decision optimization (prescriptive analytics) can help\n*  Use decision optimization\n    *  Step 1: Download the library\n    *  Step 2: Set up the engines\n    -  Step 3: Model the Data\n    -  Step 4: Set up the prescriptive model\n        * Define the decision variables\n        * Express the business constraints\n        * Express the objective\n        * Solve with Decision Optimization solve service\n    *  Step 5: Investigate the solution and run an example analysis\n*  Summary\n****", "apps": [], "results": {"msg": [{"data": "<h1>Sudoku</h1>\n<p></p>\n<p>This tutorial includes everything you need to set up decision optimization engines, build constraint programming models.</p>\n<p></p>\n<p></p>\n<p>When you finish this tutorial, you'll have a foundational knowledge of <em>Prescriptive Analytics</em>.</p>\n<p></p>\n<blockquote>\n  <p>This notebook is part of the <strong><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">Prescriptive Analytics for Python</a></strong></p>\n</blockquote>\n<p></p>\n<blockquote>\n  <p>It requires a valid subscription to <strong>Decision Optimization on the Cloud</strong> or a <strong>local installation of CPLEX Optimizers</strong>. </p>\n</blockquote>\n<p>Discover us <a href=\"https://developer.ibm.com/docloud\">here</a></p>\n<p></p>\n<p></p>\n<p>Table of contents:</p>\n<p></p>\n<ul>\n<li>Describe the business problem</li>\n</ul>\n<ul>\n<li>How decision optimization (prescriptive analytics) can help</li>\n</ul>\n<ul>\n<li>Use decision optimization</li>\n</ul>\n<pre><code>*  Step 1: Download the library\n</code></pre>\n<pre><code>*  Step 2: Set up the engines\n</code></pre>\n<pre><code>-  Step 3: Model the Data\n</code></pre>\n<pre><code>-  Step 4: Set up the prescriptive model\n</code></pre>\n<pre><code>    * Define the decision variables\n</code></pre>\n<pre><code>    * Express the business constraints\n</code></pre>\n<pre><code>    * Express the objective\n</code></pre>\n<pre><code>    * Solve with Decision Optimization solve service\n</code></pre>\n<pre><code>*  Step 5: Investigate the solution and run an example analysis\n</code></pre>\n<ul>\n<li>Summary</li>\n</ul>\n<hr />\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Describe the business problem\n\n* Sudoku is a logic-based, combinatorial number-placement puzzle.\n* The objective is to fill a 9x9 grid with digits so that each column, each row,\nand each of the nine 3x3 sub-grids that compose the grid contains all of the digits from 1 to 9.\n* The puzzle setter provides a partially completed grid, which for a well-posed puzzle has a unique solution.", "apps": [], "results": {"msg": [{"data": "<h3>Describe the business problem</h3>\n<p></p>\n<ul>\n<li>Sudoku is a logic-based, combinatorial number-placement puzzle.</li>\n</ul>\n<ul>\n<li>The objective is to fill a 9x9 grid with digits so that each column, each row,</li>\n</ul>\n<p>and each of the nine 3x3 sub-grids that compose the grid contains all of the digits from 1 to 9.</p>\n<ul>\n<li>The puzzle setter provides a partially completed grid, which for a well-posed puzzle has a unique solution.</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### References\n* See https://en.wikipedia.org/wiki/Sudoku for details", "apps": [], "results": {"msg": [{"data": "<h4>References</h4>\n<ul>\n<li>See https://en.wikipedia.org/wiki/Sudoku for details</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n*****\n## How  decision optimization can help\n* Prescriptive analytics technology recommends actions based on desired outcomes, taking into account specific scenarios, resources, and knowledge of past and current events. This insight can help your organization make better decisions and have greater control of business outcomes.  \n\n* Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  \n\n* Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  \n<br/>\n\n+ For example:\n    + Automate complex decisions and trade-offs to better manage limited resources.\n    + Take advantage of a future opportunity or mitigate a future risk.\n    + Proactively update recommendations based on changing events.\n    + Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.\n", "apps": [], "results": {"msg": [{"data": "<hr />\n<h2>How  decision optimization can help</h2>\n<ul>\n<li>Prescriptive analytics technology recommends actions based on desired outcomes, taking into account specific scenarios, resources, and knowledge of past and current events. This insight can help your organization make better decisions and have greater control of business outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  </li>\n</ul>\n<p><br/></p>\n<p></p>\n<ul>\n<li>For example:</li>\n</ul>\n<pre><code>+ Automate complex decisions and trade-offs to better manage limited resources.\n</code></pre>\n<pre><code>+ Take advantage of a future opportunity or mitigate a future risk.\n</code></pre>\n<pre><code>+ Proactively update recommendations based on changing events.\n</code></pre>\n<pre><code>+ Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.\n</code></pre>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Use decision optimization", "apps": [], "results": {"msg": [{"data": "<h2>Use decision optimization</h2>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 1: Download the library\n\nRun the following code to install Decision Optimization CPLEX Modeling library.  The *DOcplex* library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.", "apps": [], "results": {"msg": [{"data": "<h3>Step 1: Download the library</h3>\n<p></p>\n<p>Run the following code to install Decision Optimization CPLEX Modeling library.  The <em>DOcplex</em> library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nimport sys\nimport pip\ntry:\n    import docplex.cp\nexcept:\n    if hasattr(sys, 'real_prefix'):\n        #we are in a virtual env.\n        pip.main(['install', docplex]) \n    else:\n        pip.main(['install --user', docplex])", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nNote that the more global package <i>docplex</i> contains another subpackage <i>docplex.mp</i> that is dedicated to Mathematical Programming, another branch of optimization.", "apps": [], "results": {"msg": [{"data": "<p>Note that the more global package <i>docplex</i> contains another subpackage <i>docplex.mp</i> that is dedicated to Mathematical Programming, another branch of optimization.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfrom docplex.cp.model import *\nfrom sys import stdout", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 2: Set up the prescriptive engine\n\n* Subscribe to the [Decision Optimization on Cloud solve service](https://developer.ibm.com/docloud).\n* Get the service URL and your personal API key.\n\n__Set your DOcplexcloud credentials:__\n0. A first option is to set the DOcplexcloud url and key directly in the model source file *(see below)*\n1. For a persistent setting, create a Python file __docloud_config.py__ somewhere that is visible from the __PYTHONPATH__", "apps": [], "results": {"msg": [{"data": "<h3>Step 2: Set up the prescriptive engine</h3>\n<p></p>\n<ul>\n<li>Subscribe to the <a href=\"https://developer.ibm.com/docloud\">Decision Optimization on Cloud solve service</a>.</li>\n</ul>\n<ul>\n<li>Get the service URL and your personal API key.</li>\n</ul>\n<p></p>\n<p><strong>Set your DOcplexcloud credentials:</strong></p>\n<ol>\n<li>A first option is to set the DOcplexcloud url and key directly in the model source file <em>(see below)</em></li>\n</ol>\n<ol>\n<li>For a persistent setting, create a Python file <strong>docloud_config.py</strong> somewhere that is visible from the <strong>PYTHONPATH</strong></li>\n</ol>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# Initialize IBM Decision Optimization credentials\nSVC_URL = \"ENTER YOUR URL HERE\"\nSVC_KEY = \"ENTER YOUR KEY HERE\"", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 3: Model the data", "apps": [], "results": {"msg": [{"data": "<h3>Step 3: Model the data</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Grid range", "apps": [], "results": {"msg": [{"data": "<h4>Grid range</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nGRNG = range(9)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Different problems", "apps": [], "results": {"msg": [{"data": "<h4>Different problems</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n_zero means cell to be filled with appropriate value_", "apps": [], "results": {"msg": [{"data": "<p><em>zero means cell to be filled with appropriate value</em></p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nSUDOKU_PROBLEM_1 = ( (0, 0, 0,  0, 9, 0,  1, 0, 0),\n                     (2, 8, 0,  0, 0, 5,  0, 0, 0),\n                     (7, 0, 0,  0, 0, 6,  4, 0, 0),\n                     (8, 0, 5,  0, 0, 3,  0, 0, 6),\n                     (0, 0, 1,  0, 0, 4,  0, 0, 0),\n                     (0, 7, 0,  2, 0, 0,  0, 0, 0),\n                     (3, 0, 0,  0, 0, 1,  0, 8, 0),\n                     (0, 0, 0,  0, 0, 0,  0, 5, 0),\n                     (0, 9, 0,  0, 0, 0,  0, 7, 0),\n                   )\n\nSUDOKU_PROBLEM_2 = ( (0, 7, 0,  0, 0, 0,  0, 4, 9),\n                     (0, 0, 0,  4, 0, 0,  0, 0, 0),\n                     (4, 0, 3,  5, 0, 7,  0, 0, 8),\n                     (0, 0, 7,  2, 5, 0,  4, 0, 0),\n                     (0, 0, 0,  0, 0, 0,  8, 0, 0),\n                     (0, 0, 4,  0, 3, 0,  5, 9, 2),\n                     (6, 1, 8,  0, 0, 0,  0, 0, 5),\n                     (0, 9, 0,  1, 0, 0,  0, 3, 0),\n                     (0, 0, 5,  0, 0, 0,  0, 0, 7),\n                   )\n\nSUDOKU_PROBLEM_3 = ( (0, 0, 0,  0, 0, 6,  0, 0, 0),\n                     (0, 5, 9,  0, 0, 0,  0, 0, 8),\n                     (2, 0, 0,  0, 0, 8,  0, 0, 0),\n                     (0, 4, 5,  0, 0, 0,  0, 0, 0),\n                     (0, 0, 3,  0, 0, 0,  0, 0, 0),\n                     (0, 0, 6,  0, 0, 3,  0, 5, 4),\n                     (0, 0, 0,  3, 2, 5,  0, 0, 6),\n                     (0, 0, 0,  0, 0, 0,  0, 0, 0),\n                     (0, 0, 0,  0, 0, 0,  0, 0, 0)\n                    )", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ntry:\n    import numpy as np\n    import matplotlib.pyplot as plt\n    VISU_ENABLED = True\nexcept ImportError:\n    VISU_ENABLED = False", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndef print_grid(grid):\n    \"\"\" Print Sudoku grid \"\"\"\n    for l in GRNG:\n        if (l > 0) and (l % 3 == 0):\n           stdout.write('\\n')\n        for c in GRNG:\n            v = grid[l][c]\n            stdout.write('   ' if (c % 3 == 0) else ' ')\n            stdout.write(str(v) if v > 0 else '.')\n        stdout.write('\\n')", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndef draw_grid(values):\n    fig, ax = plt.subplots(figsize =(4,4))\n    min_val, max_val = 0, 9\n    R =  range(0,9)\n    for l in R:\n        for c in R:\n            v = values[c][l]\n            s = \" \"\n            if v > 0:\n                s = str(v)\n            ax.text(l+0.5,8.5-c, s, va='center', ha='center')\n        ax.set_xlim(min_val, max_val)\n    ax.set_ylim(min_val, max_val)\n    ax.set_xticks(np.arange(max_val))\n    ax.set_yticks(np.arange(max_val))\n    ax.grid()\n    plt.show()", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndef display_grid(grid, name):\n    stdout.write(name)\n    stdout.write(\":\\n\")\n    if VISU_ENABLED:\n        draw_grid(grid)\n    else:\n        print_grid(grid)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndisplay_grid(SUDOKU_PROBLEM_1, \"PROBLEM 1\")\ndisplay_grid(SUDOKU_PROBLEM_2, \"PROBLEM 2\")\ndisplay_grid(SUDOKU_PROBLEM_3, \"PROBLEM 3\")", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Choose your preferred problem (SUDOKU_PROBLEM_1 or SUDOKU_PROBLEM_2 or SUDOKU_PROBLEM_3)\nIf you change the problem, ensure to re-run all cells below this one.", "apps": [], "results": {"msg": [{"data": "<h3>Choose your preferred problem (SUDOKU<em>PROBLEM</em>1 or SUDOKU<em>PROBLEM</em>2 or SUDOKU<em>PROBLEM</em>3)</h3>\n<p>If you change the problem, ensure to re-run all cells below this one.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nproblem = SUDOKU_PROBLEM_3", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 4: Set up the prescriptive model", "apps": [], "results": {"msg": [{"data": "<h3>Step 4: Set up the prescriptive model</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nmdl = CpoModel(name=\"Sudoku\")", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Define the decision variables", "apps": [], "results": {"msg": [{"data": "<h4>Define the decision variables</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ngrid = [[integer_var(min=1, max=9, name=\"C\" + str(l) + str(c)) for l in GRNG] for c in GRNG]", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Express the business constraints", "apps": [], "results": {"msg": [{"data": "<h4>Express the business constraints</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nAdd alldiff constraints for lines", "apps": [], "results": {"msg": [{"data": "<p>Add alldiff constraints for lines</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor l in GRNG:\n    mdl.add(all_diff([grid[l][c] for c in GRNG]))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nAdd alldiff constraints for columns", "apps": [], "results": {"msg": [{"data": "<p>Add alldiff constraints for columns</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor c in GRNG:\n    mdl.add(all_diff([grid[l][c] for l in GRNG]))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nAdd alldiff constraints for sub-squares", "apps": [], "results": {"msg": [{"data": "<p>Add alldiff constraints for sub-squares</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nssrng = range(0, 9, 3)\nfor sl in ssrng:\n    for sc in ssrng:\n        mdl.add(all_diff([grid[l][c] for l in range(sl, sl + 3) for c in range(sc, sc + 3)]))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nInitialize known cells", "apps": [], "results": {"msg": [{"data": "<p>Initialize known cells</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor l in GRNG:\n    for c in GRNG:\n        v = problem[l][c]\n        if v > 0:\n            grid[l][c].set_domain((v, v))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Solve with Decision Optimization solve service", "apps": [], "results": {"msg": [{"data": "<h4>Solve with Decision Optimization solve service</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nprint(\"\\nSolving model....\")\nmsol = mdl.solve(url=SVC_URL, \n                 key=SVC_KEY, TimeLimit=10)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 5: Investigate the solution and then run an example analysis", "apps": [], "results": {"msg": [{"data": "<h3>Step 5: Investigate the solution and then run an example analysis</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndisplay_grid(problem, \"Initial problem\")\nif msol:\n    sol = [[msol[grid[l][c]] for c in GRNG] for l in GRNG]\n    stdout.write(\"Solve time: \" + str(msol.get_solve_time()) + \"\\n\")\n    display_grid(sol, \"Solution\")\nelse:\n    stdout.write(\"No solution found\\n\")", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Summary\n\nYou learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Constraint Programming model and solve it with IBM Decision Optimization on the cloud.", "apps": [], "results": {"msg": [{"data": "<h2>Summary</h2>\n<p></p>\n<p>You learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Constraint Programming model and solve it with IBM Decision Optimization on the cloud.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### References\n* [CPLEX Modeling for Python documentation](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)\n* [Decision Optimization on Cloud](https://developer.ibm.com/docloud/)\n* Need help with DOcplex or to report a bug? Please go [here](https://developer.ibm.com/answers/smartspace/docloud)\n* Contact us at dofeedback@wwpdl.vnet.ibm.com", "apps": [], "results": {"msg": [{"data": "<h4>References</h4>\n<ul>\n<li><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">CPLEX Modeling for Python documentation</a></li>\n</ul>\n<ul>\n<li><a href=\"https://developer.ibm.com/docloud/\">Decision Optimization on Cloud</a></li>\n</ul>\n<ul>\n<li>Need help with DOcplex or to report a bug? Please go <a href=\"https://developer.ibm.com/answers/smartspace/docloud\">here</a></li>\n</ul>\n<ul>\n<li>Contact us at dofeedback@wwpdl.vnet.ibm.com</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nCopyright \u00a9 2017 IBM. IPLA licensed Sample Materials.", "apps": [], "results": {"msg": [{"data": "<p>Copyright \u00a9 2017 IBM. IPLA licensed Sample Materials.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}]}