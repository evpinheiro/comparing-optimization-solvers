{"info": {}, "config": {"looknfeel": "default", "personalizedMode": "false"}, "name": "cp/jupyter/truck_fleet", "paragraphs": [{"settings": {"forms": {}, "params": {}}, "text": "%md\n# The Truck Fleet puzzle\n\nThis tutorial includes everything you need to set up decision optimization engines, build constraint programming models.\n\n\nWhen you finish this tutorial, you'll have a foundational knowledge of _Prescriptive Analytics_.\n\n>This notebook is part of the **[Prescriptive Analytics for Python](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)**\n\n>It requires a valid subscription to **Decision Optimization on the Cloud** or a **local installation of CPLEX Optimizers**. \nDiscover us [here](https://developer.ibm.com/docloud)\n\n\nTable of contents:\n\n-  Describe the business problem\n*  How decision optimization (prescriptive analytics) can help\n*  Use decision optimization\n    *  Step 1: Download the library\n    *  Step 2: Set up the engines\n    -  Step 3: Model the Data\n    *  Step 4: Prepare the data\n    -  Step 4: Set up the prescriptive model\n        * Prepare data for modeling\n        * Define the decision variables\n        * Express the business constraints\n        * Express the objective\n        * Solve with Decision Optimization solve service\n    *  Step 5: Investigate the solution and run an example analysis\n*  Summary\n****", "apps": [], "results": {"msg": [{"data": "<h1>The Truck Fleet puzzle</h1>\n<p></p>\n<p>This tutorial includes everything you need to set up decision optimization engines, build constraint programming models.</p>\n<p></p>\n<p></p>\n<p>When you finish this tutorial, you'll have a foundational knowledge of <em>Prescriptive Analytics</em>.</p>\n<p></p>\n<blockquote>\n  <p>This notebook is part of the <strong><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">Prescriptive Analytics for Python</a></strong></p>\n</blockquote>\n<p></p>\n<blockquote>\n  <p>It requires a valid subscription to <strong>Decision Optimization on the Cloud</strong> or a <strong>local installation of CPLEX Optimizers</strong>. </p>\n</blockquote>\n<p>Discover us <a href=\"https://developer.ibm.com/docloud\">here</a></p>\n<p></p>\n<p></p>\n<p>Table of contents:</p>\n<p></p>\n<ul>\n<li>Describe the business problem</li>\n</ul>\n<ul>\n<li>How decision optimization (prescriptive analytics) can help</li>\n</ul>\n<ul>\n<li>Use decision optimization</li>\n</ul>\n<pre><code>*  Step 1: Download the library\n</code></pre>\n<pre><code>*  Step 2: Set up the engines\n</code></pre>\n<pre><code>-  Step 3: Model the Data\n</code></pre>\n<pre><code>*  Step 4: Prepare the data\n</code></pre>\n<pre><code>-  Step 4: Set up the prescriptive model\n</code></pre>\n<pre><code>    * Prepare data for modeling\n</code></pre>\n<pre><code>    * Define the decision variables\n</code></pre>\n<pre><code>    * Express the business constraints\n</code></pre>\n<pre><code>    * Express the objective\n</code></pre>\n<pre><code>    * Solve with Decision Optimization solve service\n</code></pre>\n<pre><code>*  Step 5: Investigate the solution and run an example analysis\n</code></pre>\n<ul>\n<li>Summary</li>\n</ul>\n<hr />\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Describe the business problem\n\n* The problem is to deliver some orders to several clients with a single truck.\n* Each order consists of a given quantity of a product of a certain type.\n* A product type is an integer in {0, 1, 2}.\n* Loading the truck with at least one product of a given type requires some specific installations. \n* The truck can be configured in order to handle one, two or three different types of product. \n* There are 7 different configurations for the truck, corresponding to the 7 possible combinations of product types:\n - configuration 0: all products are of type 0,\n - configuration 1: all products are of type 1,\n - configuration 2: all products are of type 2,\n - configuration 3: products are of type 0 or 1,\n - configuration 4: products are of type 0 or 2,\n - configuration 5: products are of type 1 or 2,\n - configuration 6: products are of type 0 or 1 or 2.\n* The cost for configuring the truck from a configuration A to a configuration B depends on A and B.\n* The configuration of the truck determines its capacity and its loading cost.\n* A delivery consists of loading the truck with one or several orders for the same customer.\n* Both the cost (for configuring and loading the truck) and the number of deliveries needed to deliver all the orders must be minimized, the cost being the most important criterion.\n\nPlease refer to documentation for appropriate setup of solving configuration.", "apps": [], "results": {"msg": [{"data": "<h3>Describe the business problem</h3>\n<p></p>\n<ul>\n<li>The problem is to deliver some orders to several clients with a single truck.</li>\n</ul>\n<ul>\n<li>Each order consists of a given quantity of a product of a certain type.</li>\n</ul>\n<ul>\n<li>A product type is an integer in {0, 1, 2}.</li>\n</ul>\n<ul>\n<li>Loading the truck with at least one product of a given type requires some specific installations. </li>\n</ul>\n<ul>\n<li>The truck can be configured in order to handle one, two or three different types of product. </li>\n</ul>\n<ul>\n<li>There are 7 different configurations for the truck, corresponding to the 7 possible combinations of product types:</li>\n</ul>\n<ul>\n<li>configuration 0: all products are of type 0,</li>\n</ul>\n<ul>\n<li>configuration 1: all products are of type 1,</li>\n</ul>\n<ul>\n<li>configuration 2: all products are of type 2,</li>\n</ul>\n<ul>\n<li>configuration 3: products are of type 0 or 1,</li>\n</ul>\n<ul>\n<li>configuration 4: products are of type 0 or 2,</li>\n</ul>\n<ul>\n<li>configuration 5: products are of type 1 or 2,</li>\n</ul>\n<ul>\n<li>configuration 6: products are of type 0 or 1 or 2.</li>\n</ul>\n<ul>\n<li>The cost for configuring the truck from a configuration A to a configuration B depends on A and B.</li>\n</ul>\n<ul>\n<li>The configuration of the truck determines its capacity and its loading cost.</li>\n</ul>\n<ul>\n<li>A delivery consists of loading the truck with one or several orders for the same customer.</li>\n</ul>\n<ul>\n<li>Both the cost (for configuring and loading the truck) and the number of deliveries needed to deliver all the orders must be minimized, the cost being the most important criterion.</li>\n</ul>\n<p></p>\n<p>Please refer to documentation for appropriate setup of solving configuration.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n*****\n## How  decision optimization can help\n* Prescriptive analytics technology recommends actions based on desired outcomes, taking into account specific scenarios, resources, and knowledge of past and current events. This insight can help your organization make better decisions and have greater control of business outcomes.  \n\n* Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  \n\n* Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  \n<br/>\n\n+ For example:\n    + Automate complex decisions and trade-offs to better manage limited resources.\n    + Take advantage of a future opportunity or mitigate a future risk.\n    + Proactively update recommendations based on changing events.\n    + Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.\n", "apps": [], "results": {"msg": [{"data": "<hr />\n<h2>How  decision optimization can help</h2>\n<ul>\n<li>Prescriptive analytics technology recommends actions based on desired outcomes, taking into account specific scenarios, resources, and knowledge of past and current events. This insight can help your organization make better decisions and have greater control of business outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  </li>\n</ul>\n<p><br/></p>\n<p></p>\n<ul>\n<li>For example:</li>\n</ul>\n<pre><code>+ Automate complex decisions and trade-offs to better manage limited resources.\n</code></pre>\n<pre><code>+ Take advantage of a future opportunity or mitigate a future risk.\n</code></pre>\n<pre><code>+ Proactively update recommendations based on changing events.\n</code></pre>\n<pre><code>+ Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.\n</code></pre>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Use decision optimization", "apps": [], "results": {"msg": [{"data": "<h2>Use decision optimization</h2>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 1: Download the library\n\nRun the following code to install Decision Optimization CPLEX Modeling library.  The *DOcplex* library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.", "apps": [], "results": {"msg": [{"data": "<h3>Step 1: Download the library</h3>\n<p></p>\n<p>Run the following code to install Decision Optimization CPLEX Modeling library.  The <em>DOcplex</em> library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfrom sys import stdout\nimport pip\ntry:\n    import docplex.cp\nexcept:\n    if hasattr(sys, 'real_prefix'):\n        #we are in a virtual env.\n        pip.main(['install', docplex]) \n    else:\n        pip.main(['install --user', docplex])", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nNote that the more global package <i>docplex</i> contains another subpackage <i>docplex.mp</i> that is dedicated to Mathematical Programming, another branch of optimization.", "apps": [], "results": {"msg": [{"data": "<p>Note that the more global package <i>docplex</i> contains another subpackage <i>docplex.mp</i> that is dedicated to Mathematical Programming, another branch of optimization.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 2: Set up the prescriptive engine\n\n* Subscribe to the [Decision Optimization on Cloud solve service](https://developer.ibm.com/docloud).\n* Get the service URL and your personal API key.\n\n__Set your DOcplexcloud credentials:__\n0. A first option is to set the DOcplexcloud url and key directly in the model source file *(see below)*\n1. For a persistent setting, create a Python file __docloud_config.py__ somewhere that is visible from the __PYTHONPATH__", "apps": [], "results": {"msg": [{"data": "<h3>Step 2: Set up the prescriptive engine</h3>\n<p></p>\n<ul>\n<li>Subscribe to the <a href=\"https://developer.ibm.com/docloud\">Decision Optimization on Cloud solve service</a>.</li>\n</ul>\n<ul>\n<li>Get the service URL and your personal API key.</li>\n</ul>\n<p></p>\n<p><strong>Set your DOcplexcloud credentials:</strong></p>\n<ol>\n<li>A first option is to set the DOcplexcloud url and key directly in the model source file <em>(see below)</em></li>\n</ol>\n<ol>\n<li>For a persistent setting, create a Python file <strong>docloud_config.py</strong> somewhere that is visible from the <strong>PYTHONPATH</strong></li>\n</ol>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nSVC_URL = \"ENTER YOUR URL HERE\"\nSVC_KEY = \"ENTER YOUR KEY HERE\"", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfrom docplex.cp.model import *", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 3: Model the data", "apps": [], "results": {"msg": [{"data": "<h3>Step 3: Model the data</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nNext section defines the data of the problem.", "apps": [], "results": {"msg": [{"data": "<p>Next section defines the data of the problem.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# List of possible truck configurations. Each tuple is (load, cost) with:\n#    load: max truck load for this configuration,\n#    cost: cost for loading the truck in this configuration\nTRUCK_CONFIGURATIONS = ((11, 2), (11, 2), (11, 2), (11, 3), (10, 3), (10, 3), (10, 4))\n\n# List of customer orders.\n# Each tuple is (customer index, volume, product type)\nCUSTOMER_ORDERS = ((0, 3, 1), (0, 4, 2), (0, 3, 0), (0, 2, 1), (0, 5, 1), (0, 4, 1), (0, 11, 0),\n                   (1, 4, 0), (1, 5, 0), (1, 2, 0), (1, 4, 2), (1, 7, 2), (1, 3, 2), (1, 5, 0), (1, 2, 2),\n                   (2, 5, 1), (2, 6, 0), (2, 11, 2), (2, 1, 0), (2, 6, 0), (2, 3, 0))\n\n# Transition costs between configurations.\n# Tuple (A, B, TCost) means that the cost of  modifying the truck from configuration A to configuration B is TCost\nCONFIGURATION_TRANSITION_COST = tuple_set(((0, 0,  0), (0, 1,  0), (0, 2,  0), (0, 3, 10), (0, 4, 10),\n                                           (0, 5, 10), (0, 6, 15), (1, 0,  0), (1, 1,  0), (1, 2,  0),\n                                           (1, 3, 10), (1, 4, 10), (1, 5, 10), (1, 6, 15), (2, 0,  0),\n                                           (2, 1,  0), (2, 2,  0), (2, 3, 10), (2, 4, 10), (2, 5, 10),\n                                           (2, 6, 15), (3, 0,  3), (3, 1,  3), (3, 2,  3), (3, 3,  0),\n                                           (3, 4, 10), (3, 5, 10), (3, 6, 15), (4, 0,  3), (4, 1,  3),\n                                           (4, 2,  3), (4, 3, 10), (4, 4,  0), (4, 5, 10), (4, 6, 15),\n                                           (5, 0,  3), (5, 1,  3), (5, 2,  3), (5, 3, 10), (5, 4, 10),\n                                           (5, 5,  0), (5, 6, 15), (6, 0,  3), (6, 1,  3), (6, 2,  3),\n                                           (6, 3, 10), (6, 4, 10), (6, 5, 10), (6, 6,  0)\n                                           ))\n\n# Compatibility between the product types and the configuration of the truck\n# allowedContainerConfigs[i] = the array of all the configurations that accept products of type i\nALLOWED_CONTAINER_CONFIGS = ((0, 3, 4, 6),\n                             (1, 3, 5, 6),\n                             (2, 4, 5, 6))\n", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 4: Set up the prescriptive model", "apps": [], "results": {"msg": [{"data": "<h3>Step 4: Set up the prescriptive model</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Prepare data for modeling", "apps": [], "results": {"msg": [{"data": "<h4>Prepare data for modeling</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nNext section extracts from problem data the parts that are frequently used in the modeling section.", "apps": [], "results": {"msg": [{"data": "<p>Next section extracts from problem data the parts that are frequently used in the modeling section.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nnbTruckConfigs = len(TRUCK_CONFIGURATIONS)\nmaxTruckConfigLoad = [tc[0] for tc in TRUCK_CONFIGURATIONS]\ntruckCost = [tc[1] for tc in TRUCK_CONFIGURATIONS]\nmaxLoad = max(maxTruckConfigLoad)\n\nnbOrders = len(CUSTOMER_ORDERS)\nnbCustomers = 1 + max(co[0] for co in CUSTOMER_ORDERS)\nvolumes = [co[1] for co in CUSTOMER_ORDERS]\nproductType = [co[2] for co in CUSTOMER_ORDERS]\n\n# Max number of truck deliveries (estimated upper bound, to be increased if no solution)\nmaxDeliveries = 15", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Create CPO model", "apps": [], "results": {"msg": [{"data": "<h4>Create CPO model</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nmdl = CpoModel(name=\"trucks\")", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Define the decision variables", "apps": [], "results": {"msg": [{"data": "<h4>Define the decision variables</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# Configuration of the truck for each delivery\ntruckConfigs = integer_var_list(maxDeliveries, 0, nbTruckConfigs - 1, \"truckConfigs\")\n# In which delivery is an order\nwhere = integer_var_list(nbOrders, 0, maxDeliveries - 1, \"where\")\n# Load of a truck\nload = integer_var_list(maxDeliveries, 0, maxLoad, \"load\")\n# Number of deliveries that are required\nnbDeliveries = integer_var(0, maxDeliveries)\n# Identification of which customer is assigned to a delivery\ncustomerOfDelivery = integer_var_list(maxDeliveries, 0, nbCustomers, \"customerOfTruck\")\n# Transition cost for each delivery\ntransitionCost = integer_var_list(maxDeliveries - 1, 0, 1000, \"transitionCost\")", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Express the business constraints", "apps": [], "results": {"msg": [{"data": "<h4>Express the business constraints</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# transitionCost[i] = transition cost between configurations i and i+1\nfor i in range(1, maxDeliveries):\n    auxVars = (truckConfigs[i - 1], truckConfigs[i], transitionCost[i - 1])\n    mdl.add(allowed_assignments(auxVars, CONFIGURATION_TRANSITION_COST))\n\n# Constrain the volume of the orders in each truck\nmdl.add(pack(load, where, volumes, nbDeliveries))\nfor i in range(0, maxDeliveries):\n    mdl.add(load[i] <= element(truckConfigs[i], maxTruckConfigLoad))\n\n# Compatibility between the product type of an order and the configuration of its truck\nfor j in range(0, nbOrders):\n    configOfContainer = integer_var(ALLOWED_CONTAINER_CONFIGS[productType[j]])\n    mdl.add(configOfContainer == element(truckConfigs, where[j]))\n\n# Only one customer per delivery\nfor j in range(0, nbOrders):\n    mdl.add(element(customerOfDelivery, where[j]) == CUSTOMER_ORDERS[j][0])\n\n# Non-used deliveries are at the end\nfor j in range(1, maxDeliveries):\n    mdl.add((load[j - 1] > 0) | (load[j] == 0))\n\n# Dominance: the non used deliveries keep the last used configuration\nmdl.add(load[0] > 0)\nfor i in range(1, maxDeliveries):\n    mdl.add((load[i] > 0) | (truckConfigs[i] == truckConfigs[i - 1]))\n\n# Dominance: regroup deliveries with same configuration\nfor i in range(maxDeliveries - 2, 0, -1):\n    ct = true()\n    for p in range(i + 1, maxDeliveries):\n        ct = (truckConfigs[p] != truckConfigs[i - 1]) & ct\n    mdl.add((truckConfigs[i] == truckConfigs[i - 1]) | ct)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Express the objective", "apps": [], "results": {"msg": [{"data": "<h4>Express the objective</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# Objective: first criterion for minimizing the cost for configuring and loading trucks \n#            second criterion for minimizing the number of deliveries\ncost = sum(transitionCost) + sum(element(truckConfigs[i], truckCost) * (load[i] != 0) for i in range(maxDeliveries))\nmdl.add(minimize_static_lex([cost, nbDeliveries]))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### Solve with Decision Optimization solve service", "apps": [], "results": {"msg": [{"data": "<h4>Solve with Decision Optimization solve service</h4>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# Search strategy: first assign order to truck\nmdl.set_search_phases([search_phase(where)])\n\n# Solve model\nprint(\"\\nSolving model....\")\nmsol = mdl.solve(url=SVC_URL, key=SVC_KEY, TimeLimit=20, LogPeriod=3000)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 5: Investigate the solution and then run an example analysis", "apps": [], "results": {"msg": [{"data": "<h3>Step 5: Investigate the solution and then run an example analysis</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nif msol.is_solution():\n    print(\"Solution: \")\n    ovals = msol.get_objective_values()\n    print(\"   Configuration cost: {}, number of deliveries: {}\".format(ovals[0], ovals[1]))\n    for i in range(maxDeliveries):\n        ld = msol.get_value(load[i])\n        if ld > 0:\n            stdout.write(\"   Delivery {:2d}: config={}\".format(i,msol.get_value(truckConfigs[i])))\n            stdout.write(\", items=\")\n            for j in range(nbOrders):\n                if (msol.get_value(where[j]) == i):\n                    stdout.write(\" <{}, {}, {}>\".format(j, productType[j], volumes[j]))\n            stdout.write('\\n')\nelse:\n    stdout.write(\"Solve status: {}\\n\".format(msol.get_solve_status()))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Summary\n\nYou learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Constraint Programming model and solve it with IBM Decision Optimization on the cloud.", "apps": [], "results": {"msg": [{"data": "<h2>Summary</h2>\n<p></p>\n<p>You learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Constraint Programming model and solve it with IBM Decision Optimization on the cloud.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### References\n* [CPLEX Modeling for Python documentation](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)\n* [Decision Optimization on Cloud](https://developer.ibm.com/docloud/)\n* Need help with DOcplex or to report a bug? Please go [here](https://developer.ibm.com/answers/smartspace/docloud)\n* Contact us at dofeedback@wwpdl.vnet.ibm.com", "apps": [], "results": {"msg": [{"data": "<h4>References</h4>\n<ul>\n<li><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">CPLEX Modeling for Python documentation</a></li>\n</ul>\n<ul>\n<li><a href=\"https://developer.ibm.com/docloud/\">Decision Optimization on Cloud</a></li>\n</ul>\n<ul>\n<li>Need help with DOcplex or to report a bug? Please go <a href=\"https://developer.ibm.com/answers/smartspace/docloud\">here</a></li>\n</ul>\n<ul>\n<li>Contact us at dofeedback@wwpdl.vnet.ibm.com</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nCopyright \u00a9 2017 IBM. IPLA licensed Sample Materials.", "apps": [], "results": {"msg": [{"data": "<p>Copyright \u00a9 2017 IBM. IPLA licensed Sample Materials.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}]}