{"info": {}, "config": {"looknfeel": "default", "personalizedMode": "false"}, "name": "C:\\Users\\AURELIEFolacci\\python\\workspace\\docplex\\docplex\\src\\samples\\examples\\delivery\\jupyter\\lifegame", "paragraphs": [{"settings": {"forms": {}, "params": {}}, "text": "%md\n# Using logical constraints: Conway's Game of Life\n\nThis tutorial includes everything you need to set up decision optimization engines, build a mathematical programming model, leveraging logical constraints.\n\n\nWhen you finish this tutorial, you'll have a foundational knowledge of _Prescriptive Analytics_.\n\n>This notebook is part of the **[Prescriptive Analytics for Python](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)**\n\nThis model is greater than the size allowed in trial mode of CPLEX.\n>It requires a **local installation of CPLEX Optimizers**. \n\nDiscover us [here](https://developer.ibm.com/docloud)\n\n\nTable of contents:\n\n-  Describe the business problem\n*  How decision optimization (prescriptive analytics) can help\n*  Use decision optimization\n    *  Step 1: Import the library\n    *  Step 2: Set up the prescriptive model\n    *  Step 3: Solve the problem with default CPLEX algorithm\n*  Summary\n****", "apps": [], "results": {"msg": [{"data": "<h1>Using logical constraints: Conway's Game of Life</h1>\n<p></p>\n<p>This tutorial includes everything you need to set up decision optimization engines, build a mathematical programming model, leveraging logical constraints.</p>\n<p></p>\n<p></p>\n<p>When you finish this tutorial, you'll have a foundational knowledge of <em>Prescriptive Analytics</em>.</p>\n<p></p>\n<blockquote>\n  <p>This notebook is part of the <strong><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">Prescriptive Analytics for Python</a></strong></p>\n</blockquote>\n<p></p>\n<p>This model is greater than the size allowed in trial mode of CPLEX.</p>\n<blockquote>\n  <p>It requires a <strong>local installation of CPLEX Optimizers</strong>. </p>\n</blockquote>\n<p></p>\n<p>Discover us <a href=\"https://developer.ibm.com/docloud\">here</a></p>\n<p></p>\n<p></p>\n<p>Table of contents:</p>\n<p></p>\n<ul>\n<li>Describe the business problem</li>\n</ul>\n<ul>\n<li>How decision optimization (prescriptive analytics) can help</li>\n</ul>\n<ul>\n<li>Use decision optimization</li>\n</ul>\n<pre><code>*  Step 1: Import the library\n</code></pre>\n<pre><code>*  Step 2: Set up the prescriptive model\n</code></pre>\n<pre><code>*  Step 3: Solve the problem with default CPLEX algorithm\n</code></pre>\n<ul>\n<li>Summary</li>\n</ul>\n<hr />\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nThis example is demonstrating **Life Game from Robert Bosch and Michael Trick, CP 2001, CPAIOR 2002.** using CPLEX\n\nThe original paper can be found [here](http://repository.cmu.edu/tepper/507)\nIt is based on [Conway's Game of Life](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life) and is a basic integer program with birth constraints.\n\nTo begin the game, the player places checkers on some of the cells of the board, creating an initial pattern.\nA cell with a checker in it is living and those without are dead.\nThe pattern is then modified by applying the following rules over ad over abain.\n* If a cell has exactly two living neighbors, then its state remain the same in the new pattern (if living, it remains living, if dead it remains dead).\n* If a cell has exactly three living neightbors, then it is living in the next pattern. This is a birth condition.\n* If a cell has fewer than 2 or more than 3 living neighbors, then it is dead in the next pattern. These are the death by isolation and death by overcrowding conditions reespectively.\n", "apps": [], "results": {"msg": [{"data": "<p>This example is demonstrating <strong>Life Game from Robert Bosch and Michael Trick, CP 2001, CPAIOR 2002.</strong> using CPLEX</p>\n<p></p>\n<p>The original paper can be found <a href=\"http://repository.cmu.edu/tepper/507\">here</a></p>\n<p>It is based on <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">Conway's Game of Life</a> and is a basic integer program with birth constraints.</p>\n<p></p>\n<p>To begin the game, the player places checkers on some of the cells of the board, creating an initial pattern.</p>\n<p>A cell with a checker in it is living and those without are dead.</p>\n<p>The pattern is then modified by applying the following rules over ad over abain.</p>\n<ul>\n<li>If a cell has exactly two living neighbors, then its state remain the same in the new pattern (if living, it remains living, if dead it remains dead).</li>\n</ul>\n<ul>\n<li>If a cell has exactly three living neightbors, then it is living in the next pattern. This is a birth condition.</li>\n</ul>\n<ul>\n<li>If a cell has fewer than 2 or more than 3 living neighbors, then it is dead in the next pattern. These are the death by isolation and death by overcrowding conditions reespectively.</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## How  decision optimization can help\n\n* Prescriptive analytics (decision optimization) technology recommends actions that are based on desired outcomes.  It takes into account specific scenarios, resources, and knowledge of past and current events. With this insight, your organization can make better decisions and have greater control of business outcomes.  \n\n* Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  \n\n* Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  \n<br/>\n\n<u>With prescriptive analytics, you can:</u> \n\n* Automate the complex decisions and trade-offs to better manage your limited resources.\n* Take advantage of a future opportunity or mitigate a future risk.\n* Proactively update recommendations based on changing events.\n* Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.\n\n", "apps": [], "results": {"msg": [{"data": "<h2>How  decision optimization can help</h2>\n<p></p>\n<ul>\n<li>Prescriptive analytics (decision optimization) technology recommends actions that are based on desired outcomes.  It takes into account specific scenarios, resources, and knowledge of past and current events. With this insight, your organization can make better decisions and have greater control of business outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics is the next step on the path to insight-based actions. It creates value through synergy with predictive analytics, which analyzes data to predict future outcomes.  </li>\n</ul>\n<p></p>\n<ul>\n<li>Prescriptive analytics takes that insight to the next level by suggesting the optimal way to handle that future situation. Organizations that can act fast in dynamic conditions and make superior decisions in uncertain environments gain a strong competitive advantage.  </li>\n</ul>\n<p><br/></p>\n<p></p>\n<p><u>With prescriptive analytics, you can:</u> </p>\n<p></p>\n<ul>\n<li>Automate the complex decisions and trade-offs to better manage your limited resources.</li>\n</ul>\n<ul>\n<li>Take advantage of a future opportunity or mitigate a future risk.</li>\n</ul>\n<ul>\n<li>Proactively update recommendations based on changing events.</li>\n</ul>\n<ul>\n<li>Meet operational goals, increase customer loyalty, prevent threats and fraud, and optimize business processes.</li>\n</ul>\n<p></p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Use decision optimization", "apps": [], "results": {"msg": [{"data": "<h2>Use decision optimization</h2>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 1: Import the library\n\nRun the following code to import Decision Optimization CPLEX Modeling library.  The *DOcplex* library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.", "apps": [], "results": {"msg": [{"data": "<h3>Step 1: Import the library</h3>\n<p></p>\n<p>Run the following code to import Decision Optimization CPLEX Modeling library.  The <em>DOcplex</em> library contains the two modeling packages, Mathematical Programming and Constraint Programming, referred to earlier.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\niimport sys\ntry:\n    import docplex.mp\nexcept:\n    raise Exception('Please install docplex. See https://pypi.org/project/docplex/')", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nA restart of the kernel might be needed if you updated docplex.", "apps": [], "results": {"msg": [{"data": "<p>A restart of the kernel might be needed if you updated docplex.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 2: Set up the prescriptive model", "apps": [], "results": {"msg": [{"data": "<h3>Step 2: Set up the prescriptive model</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfrom docplex.mp.model import Model\nimport math\n\nfrom collections import namedtuple\n\nTdv = namedtuple('Tdv', ['dx', 'dy'])\n\nneighbors = [Tdv(i, j) for i in (-1, 0, 1) for j in (-1, 0, 1) if i or j]\n\nassert len(neighbors) == 8", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nn = 6", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nassert Model.supports_logical_constraints(), \"This model requires logical constraints cplex.version must be 12.80 or higher\"\n", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nlm = Model(name='game_of_life_{0}'.format(n))\nborder = range(0, n + 2)\ninside = range(1, n + 1)\n\n# one binary var per cell\nlife = lm.binary_var_matrix(border, border, name=lambda rc: 'life_%d_%d' % rc)\n\n# store sum of alive neighbors for interior cells\nsum_of_neighbors = {(i, j): lm.sum(life[i + n.dx, j + n.dy] for n in neighbors) for i in inside for j in inside}\n\n# all borderline cells are dead\nfor j in border:\n    life[0, j].ub = 0\n    life[j, 0].ub = 0\n    life[j, n + 1].ub = 0\n    life[n + 1, j].ub = 0\n", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nThe sum of alive neighbors for an alive cell is greater than 2", "apps": [], "results": {"msg": [{"data": "<p>The sum of alive neighbors for an alive cell is greater than 2</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor i in inside:\n    for j in inside:\n        lm.add(2 * life[i, j] <= sum_of_neighbors[i, j])", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nThe sum of alive neighbors for an alive cell is less than 3", "apps": [], "results": {"msg": [{"data": "<p>The sum of alive neighbors for an alive cell is less than 3</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor i in inside:\n    for j in inside:\n        lm.add(5 * life[i, j] + sum_of_neighbors[i, j] <= 8)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nFor a dead cell, the sum of alive neighbors cannot be 3", "apps": [], "results": {"msg": [{"data": "<p>For a dead cell, the sum of alive neighbors cannot be 3</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor i in inside:\n    for j in inside:\n        ct3 = sum_of_neighbors[i, j] == 3\n        lm.add(ct3 <= life[i, j])  # use logical cts here", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nSatisfy the 'no 3 alive neighbors for extreme rows, columns", "apps": [], "results": {"msg": [{"data": "<p>Satisfy the 'no 3 alive neighbors for extreme rows, columns</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nfor i in border:\n    if i < n:\n        for d in [1, n]:\n            lm.add(life[i, d] + life[i + 1, d] + life[i + 2, d] <= 2)\n            lm.add(life[d, i] + life[d, i + 1] + life[d, i + 2] <= 2)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nSymmetry breaking", "apps": [], "results": {"msg": [{"data": "<p>Symmetry breaking</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nn2 = int(math.ceil(n/2))\nhalf1 = range(1, n2 + 1)\nhalf2 = range(n2 + 1, n)\n\n# there are more alive cells in left side\nlm.add(lm.sum(life[i1, j1] for i1 in half1 for j1 in inside) >= lm.sum(life[i2, j2] for i2 in half2 for j2 in inside))\n\n# there are more alive cells in upper side\nlm.add(lm.sum(life[i1, j1] for i1 in inside for j1 in half1) >= lm.sum(life[i2, j2] for i2 in inside for j2 in half2))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nSetting up the objective: find maximum number of alive cells", "apps": [], "results": {"msg": [{"data": "<p>Setting up the objective: find maximum number of alive cells</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nlm.maximize(lm.sum(life))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# add a dummy kpi\nnlines = lm.sum( (lm.sum(life[i,j] for j in inside) >= 1) for i in inside)\nlm.add_kpi(nlines, 'nlines')\n\n# parameters: branch up, use heusristics, emphasis on opt, threads free\nlm.parameters.mip.strategy.branch = 1\nlm.parameters.mip.strategy.heuristicfreq = 10\nlm.parameters.emphasis.mip = 2\nlm.parameters.threads = 0", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\n# store data items as fields\nlm.size = n\nlm.life = life\n", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nborder3 = range(1, lm.size-1, 3)\nlife_vars = lm.life\nvvmap = {}\nfor i in border3:\n    for j in border3:\n        vvmap[life_vars[i, j]] = 1\n        vvmap[life_vars[i+1, j]] = 1\n        vvmap[life_vars[i, j+1]] = 1\n        vvmap[life_vars[i+1, j+1]] = 1\n\nini_s = lm.new_solution(var_value_dict=vvmap)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nassert ini_s.check(), 'error in initial solution'", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nlm.add_mip_start(ini_s)", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n### Step 3: Solve the problem with default CPLEX algorithm", "apps": [], "results": {"msg": [{"data": "<h3>Step 3: Solve the problem with default CPLEX algorithm</h3>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nassert lm.solve(log_output=True), \"!!! Solve of the model fails\"\nlm.report()", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\ndef lifegame_solution_to_matrix(mdl):\n    rr = range(0, mdl.size+2)\n    life_vars = mdl.life\n    array2 = [[life_vars[i, j].solution_value for j in rr] for i in rr]\n    return array2", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%python\nprint(lifegame_solution_to_matrix(lm))", "apps": [], "results": {"msg": [{"data": "", "type": "ANGULAR"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": false, "language": "python"}, "editorMode": "ace/mode/python", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n## Summary\n\n\nYou learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Mathematical Programming model with logical constraints.", "apps": [], "results": {"msg": [{"data": "<h2>Summary</h2>\n<p></p>\n<p></p>\n<p>You learned how to set up and use the IBM Decision Optimization CPLEX Modeling for Python to formulate a Mathematical Programming model with logical constraints.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\n#### References\n* [Decision Optimization CPLEX Modeling for Python documentation](https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html)\n* [Decision Optimization on Cloud](https://developer.ibm.com/docloud/)\n* Need help with DOcplex or to report a bug? Please go [here](https://developer.ibm.com/answers/smartspace/docloud)\n* Contact us at dofeedback@wwpdl.vnet.ibm.com\"\n", "apps": [], "results": {"msg": [{"data": "<h4>References</h4>\n<ul>\n<li><a href=\"https://rawgit.com/IBMDecisionOptimization/docplex-doc/master/docs/index.html\">Decision Optimization CPLEX Modeling for Python documentation</a></li>\n</ul>\n<ul>\n<li><a href=\"https://developer.ibm.com/docloud/\">Decision Optimization on Cloud</a></li>\n</ul>\n<ul>\n<li>Need help with DOcplex or to report a bug? Please go <a href=\"https://developer.ibm.com/answers/smartspace/docloud\">here</a></li>\n</ul>\n<ul>\n<li>Contact us at dofeedback@wwpdl.vnet.ibm.com\"</li>\n</ul>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}, {"settings": {"forms": {}, "params": {}}, "text": "%md\nCopyright \u00a9 2017-2018 IBM. Sample Materials.", "apps": [], "results": {"msg": [{"data": "<p>Copyright \u00a9 2017-2018 IBM. Sample Materials.</p>\n", "type": "HTML"}], "code": "SUCCESS"}, "user": "anonymous", "config": {"editorSetting": {"editOnDblClick": true, "language": "markdown"}, "editorMode": "ace/mode/markdown", "colWidth": 12, "enabled": true, "results": {}}}]}